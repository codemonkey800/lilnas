services:
  dashcam:
    build: ../dashcam-viewer
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashcam.rule=Host(`dashcam.lilnas.io`)
      - traefik.http.routers.dashcam.entrypoints=websecure
      - traefik.http.routers.dashcam.tls.certresolver=le

  portainer:
    restart: unless-stopped
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    volumes:
      - ../portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true

      # Frontend
      - traefik.http.services.frontend.loadbalancer.server.port=9000
      - traefik.http.routers.frontend.service=frontend
      - traefik.http.routers.frontend.rule=Host(`portainer.lilnas.io`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=le
      - traefik.http.routers.frontend.middlewares=forward-auth

      # Edge
      - traefik.http.services.edge.loadbalancer.server.port=8000
      - traefik.http.routers.edge.service=edge
      - traefik.http.routers.edge.rule=Host(`edge.lilnas.io`)
      - traefik.http.routers.edge.entrypoints=websecure
      - traefik.http.routers.edge.tls.certresolver=le

  owncast:
    image: owncast/owncast
    restart: unless-stopped
    ports:
      - 1935:1935
    labels:
      - traefik.enable=true
      - traefik.http.routers.owncast.rule=Host(`stream.lilnas.io`)
      - traefik.http.routers.owncast.entrypoints=websecure
      - traefik.http.routers.owncast.tls.certresolver=le
      - traefik.http.services.owncast.loadbalancer.server.port=8080

  apps:
    build: ../apps
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.apps.rule=Host(`apps.lilnas.io`)
      - traefik.http.routers.apps.entrypoints=websecure
      - traefik.http.routers.apps.tls.certresolver=le
      - traefik.http.routers.apps.middlewares=forward-auth
      - traefik.http.services.apps.loadbalancer.server.port=8080

  me-token-tracker:
    build: ../me-token-tracker
    restart: unless-stopped
    env_file:
      - .env.me-token-tracker

  tdr-bot:
    build: ../tdr-bot
    restart: unless-stopped
    env_file:
      - .env.tdr-bot
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.tdr.rule=Host(`tdr.lilnas.io`)
      - traefik.http.routers.tdr.entrypoints=websecure
      - traefik.http.routers.tdr.tls.certresolver=le
      - traefik.http.routers.tdr.middlewares=forward-auth
      - traefik.http.services.tdr.loadbalancer.server.port=8080
