# Default values for dashcam
# This is a YAML-formatted file.
# Declare variables to be substituted into your templates.

# Deployment configuration
replicaCount: 1
namespace: lilnas-apps

# Image configuration
image:
  repository: ghcr.io/codemonkey800/lilnas-dashcam
  tag: "latest"
  pullPolicy: Always

# Image pull secrets for private registries
imagePullSecrets: []

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80
  annotations: {}

# Service account configuration
serviceAccount:
  create: true
  annotations:
    kubernetes.io/description: "Service account for dashcam video viewer"
  name: ""

# Configuration (no config needed for static site)
config: {}

# Secrets configuration (no secrets needed for static site)
secrets: {}

# Use an existing secret for authentication
existingSecret: ""

# Ingress configuration - PUBLIC ACCESS (no forward-auth)
ingress:
  enabled: true
  className: traefik
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    kubernetes.io/description: "Public ingress for dashcam video viewer"
  hosts:
    - host: dashcam.lilnas.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - dashcam.lilnas.io
      secretName: dashcam-lilnas-io-tls
  certManager:
    clusterIssuer: letsencrypt-prod

# Pod disruption budget (disabled for single replica)
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Security context
podSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 101  # nginx user
  runAsGroup: 101  # nginx group
  fsGroup: 101
  seccompProfile:
    type: RuntimeDefault

# Container security context configuration
containerSecurityContext:
  enabled: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL

# Health check configuration
livenessProbe:
  enabled: true
  path: /
  port: http
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  enabled: true
  path: /
  port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Resource limits - Static site needs minimal resources
resources:
  requests:
    memory: "64Mi"
    cpu: "50m"
  limits:
    memory: "128Mi"
    cpu: "200m"

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Autoscaling configuration (disabled for static site)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Common labels to apply to all resources
commonLabels: {}

# Common annotations to apply to all resources
commonAnnotations: {}

# Name overrides
nameOverride: ""
fullnameOverride: ""

# Additional environment variables
extraEnv: []

# Additional environment variables from ConfigMaps or Secrets
extraEnvFrom: []

# Persistence configuration (not needed for static site)
persistence:
  enabled: false

# Temporary volume configuration (nginx cache)
tmpVolume:
  enabled: true
  sizeLimit: 100Mi

# Cache volume configuration (nginx cache)
cacheVolume:
  enabled: false

# Network policy configuration
networkPolicy:
  enabled: false

# Init containers configuration
initContainers: []

# Additional volumes and volume mounts for nginx
extraVolumes:
  - name: nginx-cache
    emptyDir: {}
  - name: nginx-run
    emptyDir: {}

extraVolumeMounts:
  - name: nginx-cache
    mountPath: /var/cache/nginx
  - name: nginx-run
    mountPath: /var/run