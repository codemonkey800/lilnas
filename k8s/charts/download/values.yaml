# Default values for download
# This is a YAML-formatted file.
# Declare variables to be substituted into your templates.

# Deployment configuration
replicaCount: 1
namespace: lilnas-apps

# Image configuration
image:
  repository: ghcr.io/codemonkey800/lilnas-download
  tag: "latest"
  pullPolicy: Always

# Image pull secrets for private registries
imagePullSecrets: []

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  annotations: {}

# Service account configuration
serviceAccount:
  create: true
  annotations:
    kubernetes.io/description: "Service account for video download service"
  name: ""

# Configuration
config:
  # Frontend configuration
  FRONTEND_PORT: "8080"
  # Backend configuration
  BACKEND_PORT: "8081"
  # Maximum concurrent downloads
  MAX_DOWNLOADS: "5"
  # Timezone
  TIMEZONE: "America/Los_Angeles"
  # MinIO configuration
  MINIO_HOST: "minio-api.lilnas-core"
  MINIO_PORT: "9000"
  MINIO_PUBLIC_URL: "https://storage.lilnas.io"
  # Node environment
  NODE_ENV: "production"

# Secrets configuration
# These values are used to create a secret if existingSecret is not specified
auth:
  minioAccessKey: ""
  minioSecretKey: ""

# Use an existing secret for authentication
existingSecret: ""

# Ingress configuration
ingress:
  enabled: true
  className: traefik
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: lilnas-core-forward-auth@kubernetescrd
    kubernetes.io/description: "Ingress for video download service"
  hosts:
    - host: download.lilnas.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - download.lilnas.io
      secretName: download-lilnas-io-tls
  certManager:
    clusterIssuer: letsencrypt-prod

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL

# Container security context configuration
containerSecurityContext:
  enabled: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL
    # Note: ffmpeg and yt-dlp may require certain capabilities
    # Add them here if needed after testing

# Volume mounts for temporary and video directories
volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: cache
    mountPath: /app/.cache
  - name: videos
    mountPath: /download/videos

volumes:
  - name: tmp
    emptyDir: {}
  - name: cache
    emptyDir: {}

# Health check configuration
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 3

# Resource limits - Video processing needs more resources
resources:
  requests:
    memory: "512Mi"
    cpu: "500m"
  limits:
    memory: "2Gi"
    cpu: "2000m"

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Common labels to apply to all resources
commonLabels: {}

# Common annotations to apply to all resources
commonAnnotations: {}

# Name overrides
nameOverride: ""
fullnameOverride: ""

# Additional environment variables
extraEnv: []
# - name: EXTRA_VAR
#   value: "extra-value"

# Additional environment variables from ConfigMaps or Secrets
extraEnvFrom: []
# - configMapRef:
#     name: extra-config
# - secretRef:
#     name: extra-secret

# Persistence configuration for video storage
persistence:
  enabled: true
  storageClass: "hdd-storage"
  accessMode: ReadWriteOnce
  size: 100Gi
  mountPath: /download/videos
  annotations: {}

# Temporary volume configuration
tmpVolume:
  enabled: true
  sizeLimit: 1Gi

# Cache volume configuration
cacheVolume:
  enabled: true
  sizeLimit: 2Gi

# Network policy configuration
networkPolicy:
  enabled: false
  # Allow egress for video downloads
  egress:
    - {}  # Allow all egress by default
  
# Init containers configuration (e.g., for directory setup)
initContainers: []
# - name: init-directories
#   image: busybox:1.35
#   command: ['sh', '-c', 'mkdir -p /download/videos && chown -R 1000:1000 /download']
#   volumeMounts:
#     - name: videos
#       mountPath: /download/videos