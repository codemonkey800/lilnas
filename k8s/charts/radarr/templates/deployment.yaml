apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "radarr.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "radarr.labels" . | nindent 4 }}
    {{- with .Values.deploymentLabels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "radarr.annotations" . | nindent 4 }}
    {{- with .Values.deploymentAnnotations }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | default 1 }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 3 }}
  selector:
    matchLabels:
      {{- include "radarr.selectorLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  strategy:
    {{ toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- include "radarr.annotations" . | nindent 8 }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "radarr.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "radarr.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        runAsNonRoot: {{ .Values.podSecurityContext.runAsNonRoot | default true }}
        runAsUser: {{ .Values.podSecurityContext.runAsUser | default 1000 }}
        runAsGroup: {{ .Values.podSecurityContext.runAsGroup | default 1000 }}
        fsGroup: {{ .Values.podSecurityContext.fsGroup | default 1000 }}
        {{- with .Values.podSecurityContext.supplementalGroups }}
        supplementalGroups:
        {{ toYaml . }}
        {{- end }}
        {{- if .Values.podSecurityContext.seccompProfile }}
        seccompProfile:
          {{- toYaml .Values.podSecurityContext.seccompProfile | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        {{- if .Values.containerSecurityContext.enabled }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: {{ .Values.containerSecurityContext.readOnlyRootFilesystem | default false }}
          capabilities:
            drop:
            - ALL
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort | default 7878 }}
          protocol: TCP
        {{- with .Values.extraEnv }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if or .Values.config .Values.extraEnvFrom }}
        envFrom:
        {{- if .Values.config }}
        - configMapRef:
            name: {{ include "radarr.fullname" . }}-config
        {{- end }}
        {{- with .Values.extraEnvFrom }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path | default "/api/v3/system/status" }}
            port: {{ .Values.livenessProbe.port | default "http" }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 120 }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 30 }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 10 }}
          successThreshold: {{ .Values.livenessProbe.successThreshold | default 1 }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold | default 3 }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path | default "/api/v3/system/status" }}
            port: {{ .Values.readinessProbe.port | default "http" }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 60 }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 15 }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 5 }}
          successThreshold: {{ .Values.readinessProbe.successThreshold | default 1 }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold | default 3 }}
        {{- end }}
        resources:
          {{- if .Values.resources }}
          {{ toYaml .Values.resources | nindent 10 }}
          {{- else }}
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
          {{- end }}
        volumeMounts:
          {{- include "radarr.volumeMounts" . | nindent 10 }}
      volumes:
        {{- include "radarr.volumes" . | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}