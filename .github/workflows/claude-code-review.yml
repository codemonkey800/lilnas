name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"
  workflow_dispatch:
    inputs:
      model:
        description: 'Claude model to use for review'
        required: false
        default: 'claude-sonnet-4-20250514'
        type: choice
        options:
          - claude-sonnet-4-20250514
          - claude-opus-4-20250514
          - claude-haiku-4-20250514
      pr_number:
        description: 'PR number to review (for manual dispatch)'
        required: false
        type: string

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Determine model for review
        id: determine_model
        run: |
          # Default model
          MODEL="claude-sonnet-4-20250514"
          
          # Check workflow dispatch input first
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ inputs.model }}" ]; then
            MODEL="${{ inputs.model }}"
          else
            # Use different models based on PR characteristics
            PR_SIZE=$(git diff --name-only origin/main...HEAD | wc -l)
            PR_TITLE="${{ github.event.pull_request.title }}"
            
            # Use Opus for large PRs or complex changes
            if [ "$PR_SIZE" -gt 10 ] || echo "$PR_TITLE" | grep -iE "(refactor|architecture|breaking)" > /dev/null; then
              MODEL="claude-opus-4-20250514"
              echo "Using Opus model for large/complex PR (${PR_SIZE} files changed)"
            # Use Haiku for documentation or simple changes
            elif echo "$PR_TITLE" | grep -iE "(docs|documentation|readme|typo|fix typo)" > /dev/null; then
              MODEL="claude-haiku-4-20250514"
              echo "Using Haiku model for documentation changes"
            else
              echo "Using default Sonnet model"
            fi
          fi
          
          echo "model=$MODEL" >> $GITHUB_OUTPUT
          echo "Selected model: $MODEL"

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: ${{ steps.determine_model.outputs.model }}
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            
            Be constructive and helpful in your feedback.
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

